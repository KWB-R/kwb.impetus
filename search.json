[{"path":"https://kwb-r.github.io/kwb.impetus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"temperiod-coverage","dir":"Articles","previous_headings":"","what":"Temperiod Coverage","title":"Deutscher Wetterdienst (DWD)","text":"","code":"library(kwb.impetus) dwd_timeperiod <- kwb.impetus::dwd_berlin_monthly %>%     dplyr::group_by(.data$parameter_name,                 .data$parameter) %>%     dplyr::summarise(date_min = min(.data$date),                     date_max = max(.data$date),                     number_of_datapoints = dplyr::n()) %>%     dplyr::mutate(file_postfix = stringr::str_replace_all(.data$parameter, \"_\", \"-\"))  DT::datatable(dwd_timeperiod, caption = \"Monthly DWD Data availability for Berlin\")"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"content","dir":"Articles","previous_headings":"Temperiod Coverage","what":"Content","title":"Deutscher Wetterdienst (DWD)","text":"","code":"DT::datatable(kwb.impetus::dwd_berlin_monthly)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"define-helper-functions","dir":"Articles","previous_headings":"","what":"Define Helper Functions","title":"Deutscher Wetterdienst (DWD)","text":"","code":"summarise_means <- function(data) {   data %>%     dplyr::summarise(       q05 = quantile(.data$mean, probs = 0.05),       q95 = quantile(.data$mean, probs = 0.95),       mean = mean(.data$mean)     )   }  filter_for_parameter <- function(data, parameter_name) {   data[data$parameter_name == parameter_name,] }  filter_for_max_year <- function(data) {   data[data$Year == max(data$Year),] }  aggregate_and_plot <- function(parameter_name, colors, unit = \"mm/month\") {      full_data <- kwb.impetus::dwd_berlin_monthly %>%      filter_for_parameter(parameter_name) %>%       dplyr::mutate(       Year = as.integer(.data$year),        Decade = kwb.impetus::floor_decade(.data$year),       Decade_Label = kwb.impetus::decade_label(.data$Decade),       Month = as.factor(.data$month),       Label = sprintf(\"DWD, monthly '%s'\", parameter_name)     )      aggregated_data <- full_data %>%      kwb.impetus::group_by_decade_month_label() %>%      summarise_means()      decades <- kwb.impetus::decades_tibble(     decade_labels = aggregated_data$Decade_Label,     colors = colors   )      decade_mean_data <- aggregated_data %>%       kwb.impetus::group_by_decade_label() %>%      dplyr::summarise(annual_mean = sum(.data$mean))      # p1 <- aggregated_data %>%   #   dplyr::left_join(decade_mean_data) %>%   #   dplyr::mutate(Decade_Label = sprintf(   #     \"%s\\n%3.1f mm/Jahr)\",   #     .data$Decade_Label,   #     round(.data$annual_mean, 1)   #   ))      p1 <- aggregated_data      p2 <- full_data %>%      filter_for_max_year() %>%      kwb.impetus::group_by_decade_label() %>%      kwb.impetus::group_by_year_month() %>%      summarise_means()      p1 %>%      ggplot2::ggplot(mapping = ggplot2::aes(       x = as.integer(.data$Month),        y = .data$mean,       col = as.factor(.data$Decade_Label)     )) +      #ggplot2::geom_point(alpha = 0.5) +      kwb.impetus::decade_ribbons() +      kwb.impetus::scale_fill_decades(decades) +     kwb.impetus::scale_color_decades(decades) +     ggplot2::geom_point() +     ggplot2::geom_point(ggplot2::aes(       x = as.integer(.data$Month),       y = .data$mean     ),      data = p2,     col = \"darkgrey\",     alpha = 0.5,      inherit.aes = FALSE,     show.legend = FALSE     ) +     kwb.impetus::ggplot2_scale_x_continuous_12() +     #ggplot2::geom_boxplot() +     ggplot2::facet_wrap(        ~ .data$Decade_Label,       nrow = 1L,        ncol = length(unique(p1$Decade_Label))     ) +     ggplot2::theme_bw() +      ggplot2::theme(legend.position = \"bottom\") +     ggplot2::labs(       y = sprintf(\"Mean '%s' (%s)\",                    parameter_name,                    unit),        x = \"Month Number\",        col = \"Mean\",        fill = \"5%/95% Conf.-Interval\",       title = unique(p1$Label)     ) }  print_to_pdf <- function(gg, file, width.cm) {      kwb.utils::preparePdf(     file,      landscape = TRUE,      width.cm = width.cm,      height.cm = 21   )    on.exit(dev.off())      print(gg) }"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"drought-index","dir":"Articles","previous_headings":"Create Plots","what":"Drought index","title":"Deutscher Wetterdienst (DWD)","text":"","code":"sel_para <- dwd_timeperiod[dwd_timeperiod$parameter == \"drought_index\",] file_name <- sprintf(\"dwd_berlin_monthly_%s\", sel_para$file_postfix) gg <- aggregate_and_plot(parameter_name = sel_para$parameter_name,                           colors = c(   'darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red' ), unit = \"-\")  readr::write_csv(gg$data, file = sprintf(\"%s.csv\", file_name)) print_to_pdf(gg, file = sprintf(\"%s.pdf\", file_name), width.cm = 50)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"evaporation-potential","dir":"Articles","previous_headings":"Create Plots","what":"Evaporation, potential","title":"Deutscher Wetterdienst (DWD)","text":"","code":"sel_para <- dwd_timeperiod[dwd_timeperiod$parameter == \"evapo_p\",] file_name <- sprintf(\"dwd_berlin_monthly_%s\", sel_para$file_postfix)  gg <- aggregate_and_plot(parameter_name = sel_para$parameter_name, colors = c(   'darkgreen', 'lightgreen', 'orange', 'red' ))  readr::write_csv(gg$data, file = sprintf(\"%s.csv\", file_name)) print_to_pdf(gg, file = sprintf(\"%s.pdf\", file_name), width.cm = 35)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"evaporation-real","dir":"Articles","previous_headings":"Create Plots","what":"Evaporation, real","title":"Deutscher Wetterdienst (DWD)","text":"","code":"sel_para <- dwd_timeperiod[dwd_timeperiod$parameter == \"evapo_r\",] file_name <- sprintf(\"dwd_berlin_monthly_%s\", sel_para$file_postfix) gg <- aggregate_and_plot(parameter_name = sel_para$parameter_name, colors = c(   'darkgreen', 'lightgreen', 'orange', 'red' ))  readr::write_csv(gg$data, file = sprintf(\"%s.csv\", file_name)) print_to_pdf(gg, file = sprintf(\"%s.pdf\", file_name), width.cm = 35)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"precipitation","dir":"Articles","previous_headings":"Create Plots","what":"Precipitation","title":"Deutscher Wetterdienst (DWD)","text":"","code":"sel_para <- dwd_timeperiod[dwd_timeperiod$parameter == \"precipitation\",] file_name <- sprintf(\"dwd_berlin_monthly_%s\", sel_para$file_postfix)  gg <- aggregate_and_plot(parameter_name = sel_para$parameter_name,                           colors = c(   'darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red' ))  readr::write_csv(gg$data, file = sprintf(\"%s.csv\", file_name)) print_to_pdf(gg, file = sprintf(\"%s.pdf\", file_name), width.cm = 50)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"soil-moisture","dir":"Articles","previous_headings":"Create Plots","what":"Soil Moisture","title":"Deutscher Wetterdienst (DWD)","text":"","code":"sel_para <- dwd_timeperiod[dwd_timeperiod$parameter == \"soil_moist\",] file_name <- sprintf(\"dwd_berlin_monthly_%s\", sel_para$file_postfix)  gg <- aggregate_and_plot(parameter_name = sel_para$parameter_name, colors = c(   'darkgreen', 'lightgreen', 'orange', 'red' ), unit = \"%\")  readr::write_csv(gg$data, file = sprintf(\"%s.csv\", file_name)) print_to_pdf(gg, file = sprintf(\"%s.pdf\", file_name), width.cm = 35)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"soil-temperature","dir":"Articles","previous_headings":"Create Plots","what":"Soil Temperature","title":"Deutscher Wetterdienst (DWD)","text":"","code":"sel_para <- dwd_timeperiod[dwd_timeperiod$parameter == \"soil_temperature_5cm\",] file_name <- sprintf(\"dwd_berlin_monthly_%s\", sel_para$file_postfix)  gg <- aggregate_and_plot(parameter_name = sel_para$parameter_name, colors = c(   'darkgreen', 'lightgreen', 'orange', 'red' ), unit = \"\\u00B0 C\")  readr::write_csv(gg$data, file = sprintf(\"%s.csv\", file_name)) print_to_pdf(gg, file = sprintf(\"%s.pdf\", file_name), width.cm = 35)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/dwd.html","id":"download","dir":"Articles","previous_headings":"","what":"Download","title":"Deutscher Wetterdienst (DWD)","text":"plots created code exported pdf files, available download : CSV: dwd_berlin_monthly_drought-index.csv dwd_berlin_monthly_evapo-p.csv dwd_berlin_monthly_evapo-r.csv dwd_berlin_monthly_precipitation.csv dwd_berlin_monthly_soil-moist.csv dwd_berlin_monthly_soil-temperature-5cm.csv PDF: dwd_berlin_monthly_drought-index.pdf dwd_berlin_monthly_evapo-p.pdf dwd_berlin_monthly_evapo-r.pdf dwd_berlin_monthly_precipitation.pdf dwd_berlin_monthly_soil-moist.pdf dwd_berlin_monthly_soil-temperature-5cm.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"install-r-package","dir":"Articles","previous_headings":"","what":"Install R Package","title":"Wasserportal","text":"","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org')) # Download and install kwb.impetus in R install.packages('kwb.impetus')"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"define-helper-functions","dir":"Articles","previous_headings":"","what":"Define Helper Functions","title":"Wasserportal","text":"","code":"library(kwb.impetus)  get_master <- function(stations_df) {      if(\"Betreiber\" %in% names(stations_df)) {     stations_df <- stations_df %>%    dplyr::filter(.data$Betreiber == \"Land Berlin\")    }    urls <- stations_df %>% dplyr::pull(.data$stammdaten_link)  wasserportal::get_wasserportal_masters_data(master_urls = urls) %>%    dplyr::rename(Messstellennummer = .data$Nummer) %>%    dplyr::mutate(Messstellennummer = as.double(.data$Messstellennummer))   }  get_data_name <- function(para_name) {   prefix <- \"\"   if(startsWith(para_name, \"surface\")) {     prefix <- \"daily_\"   }   paste0(prefix, para_name) }  get_master_name <- function(para_name) {   paste0(\"stations_\", para_name) }"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"surface-water","dir":"Articles","previous_headings":"","what":"Surface Water","title":"Wasserportal","text":"","code":"stations <- wasserportal::get_stations() #> Importing 9 station overviews from Wasserportal Berlin ... ok. (13.89s) variables <- wasserportal::get_surfacewater_variables() variables <- variables[1:2]   # Downloads pre-compiled data (daily updated at 5am UTC)  # from https://kwb-r.github.io/wasserportal/daily_surface_water.<parameter_name>.csv # see also: https://kwb-r.github.io/wasserportal/articles/surface-water.html overview_names <- names(stations$overview_list)  wp_master <- wasserportal::wp_masters_data_to_list(overview_names) #> Rows: 75 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): Messstellenname, Gewaesser, Betreiber, Datum, Einheit, Klassifikati... #> dbl (2): Messstellennummer, Wasserstand #> lgl (1): Ganglinien #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 18 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): Messstellenname, Gewaesser, Betreiber, Datum, Einheit, Klassifikati... #> dbl (2): Messstellennummer, Durchfluss #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 64 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): Messstellennummer, Messstellenname, Gewaesser, Betreiber, Datum, Wa... #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 16 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): Messstellennummer, Messstellenname, Gewaesser, Betreiber, Datum, Le... #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 16 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (8): Messstellennummer, Messstellenname, Gewaesser, Betreiber, Datum, pH... #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 16 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): Messstellennummer, Messstellenname, Gewaesser, Betreiber, Datum, Sa... #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 16 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (9): Messstellennummer, Messstellenname, Gewaesser, Betreiber, Datum, Pa... #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 878 Columns: 11 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (8): Bezirk, Auspraegung, Grundwasserleiter, Grundwasserspannung, Datum,... #> dbl (2): Messstellennummer, Grundwasserstand_m_ue_NHN #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 209 Columns: 10 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (7): Bezirk, Auspraegung, Grundwasserleiter, Datum, Einheit, Klassifikat... #> dbl (2): Messstellennummer, Parameterwert #> lgl (1): Ganglinie #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. wp_data <- wasserportal::wp_timeseries_data_to_list(overview_names) #> Rows: 471705 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (2): Parameter, Einheit #> dbl  (2): Messstellennummer, Tagesmittelwert #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 110597 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (2): Parameter, Einheit #> dbl  (2): Messstellennummer, Tagesmittelwert #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 179009 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (4): Zeitpunkt Minimum, Zeitpunkt Maximum, Parameter, Einheit #> dbl  (4): Messstellennummer, Tagesminimum, Tagesmittelwert, Tagesmaximum #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 79508 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (4): Zeitpunkt Minimum, Zeitpunkt Maximum, Parameter, Einheit #> dbl  (4): Messstellennummer, Tagesminimum, Tagesmittelwert, Tagesmaximum #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 78850 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (3): Zeitpunkt Minimum, Zeitpunkt Maximum, Parameter #> dbl  (4): Messstellennummer, Tagesminimum, Tagesmittelwert, Tagesmaximum #> lgl  (1): Einheit #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 78105 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (4): Zeitpunkt Minimum, Zeitpunkt Maximum, Parameter, Einheit #> dbl  (4): Messstellennummer, Tagesminimum, Tagesmittelwert, Tagesmaximum #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 78089 Columns: 9 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (4): Zeitpunkt Minimum, Zeitpunkt Maximum, Parameter, Einheit #> dbl  (4): Messstellennummer, Tagesminimum, Tagesmittelwert, Tagesmaximum #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 7294731 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (2): Parameter, Einheit #> dbl  (2): Messstellennummer, Messwert #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 713955 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (2): Parameter, Einheit #> dbl  (2): Messstellennummer, Messwert #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  ### Alternatively: download latest data from Wasserportal Berlin (takes a while) #wp_sw_data <- wasserportal::get_daily_surfacewater_data(stations, variables)  #wp_gw_data <- wasserportal::get_groundwater_data(stations) #wp_data <- c(wp_sw_data, wp_gw_data)"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"surface-water-level","dir":"Articles","previous_headings":"Surface Water","what":"Surface Water Level","title":"Wasserportal","text":"","code":"para_name <- \"surface-water_water-level\"  surfacewater_level_master <- wp_data[[get_data_name(para_name)]] %>%    dplyr::filter(.data$Parameter == \"Wasserstand\") %>%     dplyr::mutate(Datum = as.Date(.data$Datum),                 Year = as.integer(format(.data$Datum, \"%Y\")),                  Decade = kwb.impetus::floor_decade(.data$Year),                 Decade_Label = sprintf(\"%d - %d\",                                         .data$Decade,                                         .data$Decade + 9),                 Month = as.factor(format(.data$Datum, \"%m\"))) %>%    dplyr::left_join(get_master(wp_master[[get_master_name(para_name)]])) %>%    dplyr::mutate(Tagesmittelwert_Pegelstand_mNN = as.numeric(.data$Pegelnullpunkt_m) + .data$Tagesmittelwert/100) %>%   ### remove -777 for messstellennummer 5867000 (few values in 2000) resulted by step above   dplyr::filter(.data$Tagesmittelwert_Pegelstand_mNN != -777) %>%   dplyr::select(- .data$Pegelnullpunkt_m) %>%    dplyr::mutate(Label = sprintf(\"%s (%s, id: %s, fluss-km: %2.2f)\",                                  .data$Name,                                 .data$Gewaesser,                                  .data$Messstellennummer,                                  as.numeric(.data$Flusskilometer))) #> Importing 63 station metadata from Wasserportal Berlin ... ok. (51.82s) #> Joining, by = \"Messstellennummer\"  surfacewater_level_master_agg <- surfacewater_level_master %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Decade,                   .data$Decade_Label,                    .data$Month,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert_Pegelstand_mNN = mean(.data$Tagesmittelwert_Pegelstand_mNN),                    q05 = as.numeric(quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.05)),                    q95 = as.numeric(quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.95)),                    )   para_name_export <- \"surface-water_level\"  readr::write_csv(surfacewater_level_master_agg, sprintf(\"%s.csv\", para_name_export ))  decades <- tibble::tibble(names = unique(surfacewater_level_master_agg$Decade_Label)[order(unique(surfacewater_level_master_agg$Decade_Label))],                           values = c('darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red'))   kwb.utils::preparePdf(sprintf(\"%s.pdf\", para_name_export),                       landscape = TRUE,                       width.cm = 29.7,                        height.cm = 21) #> [1] \"surface-water_level.pdf\"  ids <- unique(surfacewater_level_master_agg$Messstellennummer)  for(id in ids) { p1 <- surfacewater_level_master_agg %>%    dplyr::filter(.data$Messstellennummer == id)   p2 <- surfacewater_level_master %>%    dplyr::filter(.data$Year == max(.data$Year)) %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Year,                   .data$Month,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert_Pegelstand_mNN = mean(.data$Tagesmittelwert_Pegelstand_mNN),                    q05 = quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.05),                    q95 = quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.95)) %>%    dplyr::filter(.data$Messstellennummer == id)   n_decades <- length(unique(p1$Decade_Label))  gg <- p1 %>%    ggplot2::ggplot(mapping = ggplot2::aes(x = as.integer(.data$Month),                                           y = .data$Monatsmittelwert_Pegelstand_mNN,                                          col = as.factor(.data$Decade_Label))) +    #ggplot2::geom_point(alpha = 0.5) +    ggplot2::geom_ribbon(ggplot2::aes_string(ymin = \"q05\",                                             ymax = \"q95\",                                             fill = \"Decade_Label\"),                         alpha = 0.1) +    kwb.impetus::scale_fill_decades(decades) +   kwb.impetus::scale_color_decades(decades) +   ggplot2::geom_point() +   ggplot2::geom_point(ggplot2::aes(x = as.integer(.data$Month),                                    y = .data$Monatsmittelwert_Pegelstand_mNN),                        data = p2,                       col = \"darkgrey\",                       alpha = 0.5,                        inherit.aes = FALSE,                       show.legend = FALSE) +   ggplot2::scale_x_continuous(breaks = 1:12, labels = 1:12, minor_breaks = NULL) +   #ggplot2::geom_boxplot() +   ggplot2::facet_wrap( ~ .data$Decade_Label,                        nrow = 1,                         ncol = n_decades) +   ggplot2::theme_bw() +    ggplot2::theme(legend.position=\"bottom\") +   ggplot2::labs(y = \"Monthly Mean Water Level (m NN)\",                  x = \"Month Number\",                  col = \"Mean\",                  fill = \"5%/95% Conf.-Interval\",                 title = unique(p1$Label))  plot(gg) } dev.off() #> agg_png  #>       2"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"surface-water-flow","dir":"Articles","previous_headings":"Surface Water","what":"Surface Water Flow","title":"Wasserportal","text":"","code":"para_name <- \"surface-water_flow\"  surfacewater_flow_master <- wp_data[[get_data_name(para_name)]] %>%    dplyr::filter(.data$Parameter == \"Durchfluss\") %>%       dplyr::mutate(Datum = as.Date(.data$Datum),                 Year = as.integer(format(.data$Datum, \"%Y\")),                  Decade = kwb.impetus::floor_decade(.data$Year),                 Decade_Label = sprintf(\"%d - %d\",                                         .data$Decade,                                         .data$Decade + 9),                 Month = as.factor(format(.data$Datum, \"%m\"))) %>%    dplyr::left_join(get_master(wp_master[[get_master_name(para_name)]])) %>%    dplyr::mutate(Label = sprintf(\"%s (%s, id: %s, fluss-km: %2.2f)\",                                  .data$Name,                                 .data$Gewaesser,                                  .data$Messstellennummer,                                  as.numeric(.data$Flusskilometer))) #> Importing 16 station metadata from Wasserportal Berlin ... ok. (17.09s) #> Joining, by = \"Messstellennummer\"  surfacewater_flow_master_agg <- surfacewater_flow_master %>%     dplyr::group_by(.data$Messstellennummer,                    .data$Decade,                   .data$Decade_Label,                    .data$Month,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert = mean(.data$Tagesmittelwert),                    q05 = as.numeric(quantile(.data$Tagesmittelwert, probs = 0.05)),                    q95 = as.numeric(quantile(.data$Tagesmittelwert, probs = 0.95)),                    )   readr::write_csv(surfacewater_flow_master_agg, sprintf(\"%s.csv\", para_name))    decades <- tibble::tibble(names = unique(surfacewater_flow_master_agg$Decade_Label)[order(unique(surfacewater_flow_master_agg$Decade_Label))],                           values = c('darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red'))    kwb.utils::preparePdf(sprintf(\"%s.pdf\", para_name),                       landscape = TRUE,                       width.cm = 29.7,                        height.cm = 21) #> [1] \"surface-water_flow.pdf\"  ids <- unique(surfacewater_flow_master_agg$Messstellennummer)  for(id in ids) { p1 <- surfacewater_flow_master_agg %>%    dplyr::filter(.data$Messstellennummer == id)   p2 <- surfacewater_flow_master %>%    dplyr::filter(.data$Year == max(.data$Year)) %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Year,                   .data$Month,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert = mean(.data$Tagesmittelwert),                    q05 = quantile(.data$Tagesmittelwert, probs = 0.05),                    q95 = quantile(.data$Tagesmittelwert, probs = 0.95)) %>%    dplyr::filter(.data$Messstellennummer == id)   n_decades <- length(unique(p1$Decade_Label))  gg <- p1 %>%    ggplot2::ggplot(mapping = ggplot2::aes(x = as.integer(.data$Month),                                           y = .data$Monatsmittelwert,                                          col = as.factor(.data$Decade_Label))) +    #ggplot2::geom_point(alpha = 0.5) +    ggplot2::geom_ribbon(ggplot2::aes_string(ymin = \"q05\",                                             ymax = \"q95\",                                             fill = \"Decade_Label\"),                         alpha = 0.1) +    kwb.impetus::scale_fill_decades(decades) +   kwb.impetus::scale_color_decades(decades) +   ggplot2::geom_point() +   ggplot2::geom_point(ggplot2::aes(x = as.integer(.data$Month),                                    y = .data$Monatsmittelwert),                        data = p2,                       col = \"darkgrey\",                       alpha = 0.5,                        inherit.aes = FALSE,                       show.legend = FALSE) +   ggplot2::scale_x_continuous(breaks = 1:12, labels = 1:12, minor_breaks = NULL) +   #ggplot2::geom_boxplot() +   ggplot2::facet_wrap( ~ .data$Decade_Label,                        nrow = 1,                         ncol = n_decades) +   ggplot2::theme_bw() +    ggplot2::theme(legend.position=\"bottom\") +   ggplot2::labs(y = \"Monthly mean Surface Water Flow (m\\u00B3/s)\",                  x = \"Month Number\",                  col = \"Mean\",                  fill = \"5%/95% Conf.-Interval\",                 title = unique(p1$Label))  plot(gg) } dev.off() #> agg_png  #>       2"},{"path":[]},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"grundwater-level","dir":"Articles","previous_headings":"Groundwater","what":"Grundwater Level","title":"Wasserportal","text":"","code":"para_name <- \"groundwater_level\"   groundwater_level_master <- wp_data[[get_data_name(para_name)]] %>%    dplyr::filter(.data$Parameter == \"GW-Stand\") %>%       dplyr::mutate(Datum = as.Date(.data$Datum),                 Year = as.integer(format(.data$Datum, \"%Y\")),                  Decade = kwb.impetus::floor_decade(.data$Year),                 Decade_Label = sprintf(\"%d - %d\",                                         .data$Decade,                                         .data$Decade + 9),                 Month = as.factor(format(.data$Datum, \"%m\"))) %>%    dplyr::left_join(get_master(wp_master[[get_master_name(para_name)]])) %>%    dplyr::mutate(Label = sprintf(\"%s (%s, %s, gok: %.1f m, fok-fuk: %.1f-%.1f m)\",                                  .data$Messstellennummer,                                 .data$Bezirk,                                  .data$Grundwasserleiter,                                  as.double(.data$Gelaendeoberkante_GOK_m_ue_NHN),                                 as.double(.data$Filteroberkante_m_u_GOK),                                  as.double(.data$Filterunterkante_m_u_GOK))) #> Importing 878 station metadata from Wasserportal Berlin ... ok. (10.67s) #> Joining, by = \"Messstellennummer\"  groundwater_level_master_agg <- groundwater_level_master %>%     dplyr::group_by(.data$Messstellennummer,                    .data$Decade,                   .data$Decade_Label,                    .data$Month,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert = mean(.data$Messwert),                    q05 = as.numeric(quantile(.data$Messwert, probs = 0.05)),                    q95 = as.numeric(quantile(.data$Messwert, probs = 0.95)),                    )   readr::write_csv(groundwater_level_master_agg, sprintf(\"%s.csv\", para_name))  decades <- tibble::tibble(names = unique(groundwater_level_master_agg$Decade_Label)[order(unique(groundwater_level_master_agg$Decade_Label))],                           values = c('darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red'))    kwb.utils::preparePdf(sprintf(\"%s.pdf\", para_name),                       landscape = TRUE,                       width.cm = 29.7,                        height.cm = 21) #> [1] \"groundwater_level.pdf\"  ids <- unique(groundwater_level_master_agg$Messstellennummer)  for(id in ids) { p1 <- groundwater_level_master_agg %>%    dplyr::filter(.data$Messstellennummer == id)   p2 <- groundwater_level_master %>%    dplyr::filter(.data$Year == max(.data$Year)) %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Year,                   .data$Month,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert = mean(.data$Messwert),                    q05 = quantile(.data$Messwert, probs = 0.05),                    q95 = quantile(.data$Messwert, probs = 0.95)) %>%    dplyr::filter(.data$Messstellennummer == id)   n_decades <- length(unique(p1$Decade_Label))  gg <- p1 %>%    ggplot2::ggplot(mapping = ggplot2::aes(x = as.integer(.data$Month),                                           y = .data$Monatsmittelwert,                                          col = as.factor(.data$Decade_Label))) +    #ggplot2::geom_point(alpha = 0.5) +    ggplot2::geom_ribbon(ggplot2::aes_string(ymin = \"q05\",                                             ymax = \"q95\",                                             fill = \"Decade_Label\"),                         alpha = 0.1) +    kwb.impetus::scale_fill_decades(decades) +   kwb.impetus::scale_color_decades(decades) +   ggplot2::geom_point() +   ggplot2::geom_point(ggplot2::aes(x = as.integer(.data$Month),                                    y = .data$Monatsmittelwert),                        data = p2,                       col = \"darkgrey\",                       alpha = 0.5,                        inherit.aes = FALSE,                       show.legend = FALSE) +   ggplot2::scale_x_continuous(breaks = 1:12, labels = 1:12, minor_breaks = NULL) +   #ggplot2::geom_boxplot() +   ggplot2::facet_wrap( ~ .data$Decade_Label,                        nrow = 1,                         ncol = n_decades) +   ggplot2::theme_bw() +    ggplot2::theme(legend.position=\"bottom\") +   ggplot2::labs(y = \"Monthly Mean Groundwater Level (m NN)\",                  x = \"Month Number\",                  col = \"Month\",                  fill = \"5%/95% Conf.-Interval\",                 title = unique(p1$Label))  plot(gg) } dev.off() #> agg_png  #>       2"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"download","dir":"Articles","previous_headings":"","what":"Download","title":"Wasserportal","text":"plots created code exported pdf files, available download :","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"csv","dir":"Articles","previous_headings":"Download","what":"CSV","title":"Wasserportal","text":"Surface Water surface-water_level.csv surface-water_flow.csv Groundwater groundwater_level.csv","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"pdf","dir":"Articles","previous_headings":"Download","what":"PDF","title":"Wasserportal","text":"Surface Water surface-water_level.pdf surface-water_flow.pdf Groundwater groundwater_level.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M (2022). kwb.impetus: R Package Functions Used Project IMPETUS. R package version 0.0.0.9000, https://github.com/KWB-R/kwb.impetus.","code":"@Manual{,   title = {kwb.impetus: R Package with Functions Used in Project IMPETUS},   author = {Michael Rustler},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/KWB-R/kwb.impetus}, }"},{"path":"https://kwb-r.github.io/kwb.impetus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package with Functions Used in Project IMPETUS","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install 'kwb.impetus in R install.packages('kwb.impetus')  # Browse the 'kwb.impetus manual pages help(package = 'kwb.impetus')"},{"path":"https://kwb-r.github.io/kwb.impetus/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Package with Functions Used in Project IMPETUS","text":"Checkout Data Analysis workflows Berlin case study site: Deutscher Wetterdienst (DWD) using monthly open-data precitiptation (1881-01 - 2022-08) potential evaporation (1991-01 - 2022-08). details dataset pre-processed, see : dwd_berlin_monthly Wasserportal surface water level/flow groundwater level Berlin (https://wasserportal.berlin.de).","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label for Decade Year Range — decade_label","title":"Label for Decade Year Range — decade_label","text":"Label Decade Year Range","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label for Decade Year Range — decade_label","text":"","code":"decade_label(decade)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label for Decade Year Range — decade_label","text":"decade start decade integer, e.g. 1990L","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label for Decade Year Range — decade_label","text":"character string, e.g. \"1990 - 1999\"","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_ribbons.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 ribbon between q05 and q95 — decade_ribbons","title":"ggplot2 ribbon between q05 and q95 — decade_ribbons","text":"ggplot2 ribbon q05 q95","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_ribbons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 ribbon between q05 and q95 — decade_ribbons","text":"","code":"decade_ribbons(alpha = 0.1)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decade_ribbons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 ribbon between q05 and q95 — decade_ribbons","text":"alpha passed geom_ribbon","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decades_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibble with Decade Names and Values — decades_tibble","title":"Tibble with Decade Names and Values — decades_tibble","text":"Tibble Decade Names Values","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decades_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibble with Decade Names and Values — decades_tibble","text":"","code":"decades_tibble(   decade_labels,   colors = c(\"darkblue\", \"blue\", \"darkgreen\", \"lightgreen\", \"orange\", \"red\") )"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decades_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tibble with Decade Names and Values — decades_tibble","text":"decade_labels decade labels colors colour values","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/decades_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tibble with Decade Names and Values — decades_tibble","text":"tibble columns names values","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/dwd_berlin_monthly.html","id":null,"dir":"Reference","previous_headings":"","what":"DWD Dataset (Precipitation and Potential Evaporation) Averaged for Berlin — dwd_berlin_monthly","title":"DWD Dataset (Precipitation and Potential Evaporation) Averaged for Berlin — dwd_berlin_monthly","text":"dataset containing precipitation potential diamonds.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/dwd_berlin_monthly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DWD Dataset (Precipitation and Potential Evaporation) Averaged for Berlin — dwd_berlin_monthly","text":"","code":"dwd_berlin_monthly"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/dwd_berlin_monthly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DWD Dataset (Precipitation and Potential Evaporation) Averaged for Berlin — dwd_berlin_monthly","text":"data frame 3852 rows 12 variables: parameter_name self-defined name parameter parameter original DWD parameter name (required requests) file name raw data file year year month month mean spatial mean value month sd spatial standard deviation value month min spatial minimum value month max spatial maximum value month n_values number 1x1km2 grids used spatial statistics calculation parameter parameter name url full url raw data file","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/dwd_berlin_monthly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DWD Dataset (Precipitation and Potential Evaporation) Averaged for Berlin — dwd_berlin_monthly","text":"","code":"if (FALSE) { ############################################################################ #### R code used for creation of \"dwd_berlin_monthly.rds\" ############################################################################  remotes::install_github(\"kwb-r/kwb.dwd\")  library(kwb.impetus)  shape_obj <- kwb.dwd:::get_shape_of_german_region(name = \"berlin\") shape_file <- \"berlin.shp\"  shape_obj %>%   sf::st_as_sf() %>%   sf::write_sf(shape_file)  ### Plot to check if Berlin boundaries are plotted correctly. ### Set target CRS crs_target <- 4326 shape_pt <- sf::st_read(shape_file) %>%  sf::st_transform(crs = crs_target) basemap <- shape_pt %>%  leaflet::leaflet() %>%  leaflet::addTiles() %>%  leaflet::addProviderTiles(leaflet::providers$CartoDB.Positron) %>%  leaflet::addPolygons(color = \"red\", fill = FALSE) basemap yearmonth_start <- \"188101\" yearmonth_end <- \"202208\" kwb.dwd:::list_monthly_grids_germany_asc_gz(\"x\") dwd_monthly_vars <- c(#\"air temperature (mean)\" = \"air_temperature_mean\"#,  \"drought index\" = \"drought_index\",  \"evaporation, potential\" = \"evapo_p\",  \"evaporation, real\" = \"evapo_r\",  \"precipitation\" = \"precipitation\",  \"soil moisture\" = \"soil_moist\",  \"soil temperature (5 cm)\" = \"soil_temperature_5cm\" )  system.time(  dwd_berlin_monthly_list <- stats::setNames(lapply(dwd_monthly_vars, function(dwd_var) {    kwb.dwd::read_monthly_data_over_shape(      file = shape_file,      variable = dwd_var,      from = yearmonth_start,      to = yearmonth_end,      quiet = TRUE    )  }), nm = dwd_monthly_vars))   dwd_berlin_monthly <- dplyr::bind_rows(dwd_berlin_monthly_list, .id = \"parameter\")  dwd_berlin_monthly <- tibble::tibble(parameter_name = names(dwd_monthly_vars),                                      parameter = as.character(dwd_monthly_vars)) %>%    dplyr::left_join(dwd_berlin_monthly)   usethis::use_data(dwd_berlin_monthly, overwrite = TRUE)  }     # Dataset  dwd_berlin_monthly #> # A tibble: 3,852 × 11 #>    param…¹ param…² file  date        year month  mean     sd   min   max n_val…³ #>    <chr>   <chr>   <chr> <date>     <int> <int> <dbl>  <dbl> <dbl> <dbl>   <dbl> #>  1 drough… drough… grid… 1970-01-01  1970     1  7.32 0.955      5    10     902 #>  2 drough… drough… grid… 1971-01-01  1971     1  2.00 0.115      1     3     902 #>  3 drough… drough… grid… 1972-01-01  1972     1  1.99 0.0938     1     2     902 #>  4 drough… drough… grid… 1973-01-01  1973     1  2.48 0.500      2     3     902 #>  5 drough… drough… grid… 1974-01-01  1974     1  2.02 0.151      2     3     902 #>  6 drough… drough… grid… 1975-01-01  1975     1  2.87 0.332      2     3     902 #>  7 drough… drough… grid… 1976-01-01  1976     1  9.05 0.500      8    11     902 #>  8 drough… drough… grid… 1977-01-01  1977     1  2.23 0.421      2     3     902 #>  9 drough… drough… grid… 1978-01-01  1978     1  1.76 0.428      1     2     902 #> 10 drough… drough… grid… 1979-01-01  1979     1  5.10 0.528      4     7     902 #> # … with 3,842 more rows, and abbreviated variable names ¹​parameter_name, #> #   ²​parameter, ³​n_values   # Covered time period for each parameter  dwd_berlin_monthly %>%   dplyr::group_by(.data$parameter_name, .data$parameter) %>% dplyr::summarise(date_min = min(.data$date), date_max = max(.data$date)) #> `summarise()` has grouped output by 'parameter_name'. You can override using #> the `.groups` argument. #> # A tibble: 6 × 4 #> # Groups:   parameter_name [6] #>   parameter_name          parameter            date_min   date_max   #>   <chr>                   <chr>                <date>     <date>     #> 1 drought index           drought_index        1970-01-01 2022-08-01 #> 2 evaporation, potential  evapo_p              1991-01-01 2022-08-01 #> 3 evaporation, real       evapo_r              1991-01-01 2022-08-01 #> 4 precipitation           precipitation        1881-01-01 2022-08-01 #> 5 soil moisture           soil_moist           1991-01-01 2022-08-01 #> 6 soil temperature (5 cm) soil_temperature_5cm 1991-01-01 2022-08-01"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/floor_decade.html","id":null,"dir":"Reference","previous_headings":"","what":"floor to decade — floor_decade","title":"floor to decade — floor_decade","text":"floors previous decade.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/floor_decade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"floor to decade — floor_decade","text":"","code":"floor_decade(value)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/floor_decade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"floor to decade — floor_decade","text":"value year","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/floor_decade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"floor to decade — floor_decade","text":"decade","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/floor_decade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"floor to decade — floor_decade","text":"","code":"floor_decade(2000:2020) #>  [1] 2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 2010 2010 2010 2010 2010 #> [16] 2010 2010 2010 2010 2010 2020"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/ggplot2_scale_x_continuous_12.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous x scale for months — ggplot2_scale_x_continuous_12","title":"Continuous x scale for months — ggplot2_scale_x_continuous_12","text":"Continuous x scale months","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/ggplot2_scale_x_continuous_12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous x scale for months — ggplot2_scale_x_continuous_12","text":"","code":"ggplot2_scale_x_continuous_12()"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_decade_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by Dekade_Label — group_by_decade_label","title":"Group by Dekade_Label — group_by_decade_label","text":"Group Dekade_Label","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_decade_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by Dekade_Label — group_by_decade_label","text":"","code":"group_by_decade_label(data)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_decade_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by Dekade_Label — group_by_decade_label","text":"data data frame","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_decade_month_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by Decade, Decade_Label, Month, Label — group_by_decade_month_label","title":"Group by Decade, Decade_Label, Month, Label — group_by_decade_month_label","text":"Group Decade, Decade_Label, Month, Label","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_decade_month_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by Decade, Decade_Label, Month, Label — group_by_decade_month_label","text":"","code":"group_by_decade_month_label(data)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_decade_month_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by Decade, Decade_Label, Month, Label — group_by_decade_month_label","text":"data data frame","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_site_decade_month_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by Messstellennummer, Decade, Decade_Label, Month, Label — group_by_site_decade_month_label","title":"Group by Messstellennummer, Decade, Decade_Label, Month, Label — group_by_site_decade_month_label","text":"Group Messstellennummer, Decade, Decade_Label, Month, Label","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_site_decade_month_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by Messstellennummer, Decade, Decade_Label, Month, Label — group_by_site_decade_month_label","text":"","code":"group_by_site_decade_month_label(data)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_site_decade_month_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by Messstellennummer, Decade, Decade_Label, Month, Label — group_by_site_decade_month_label","text":"data data frame","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_site_year_month_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by Messstellennummer, Year, Month, Label — group_by_site_year_month_label","title":"Group by Messstellennummer, Year, Month, Label — group_by_site_year_month_label","text":"Group Messstellennummer, Year, Month, Label","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_site_year_month_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by Messstellennummer, Year, Month, Label — group_by_site_year_month_label","text":"","code":"group_by_site_year_month_label(data)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_site_year_month_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by Messstellennummer, Year, Month, Label — group_by_site_year_month_label","text":"data data frame","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_year_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by Year, Month — group_by_year_month","title":"Group by Year, Month — group_by_year_month","text":"Group Year, Month","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_year_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by Year, Month — group_by_year_month","text":"","code":"group_by_year_month(data)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/group_by_year_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by Year, Month — group_by_year_month","text":"data data frame","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/numeric_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnamed Quantile Value — numeric_quantile","title":"Unnamed Quantile Value — numeric_quantile","text":"Unnamed Quantile Value","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/numeric_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnamed Quantile Value — numeric_quantile","text":"","code":"numeric_quantile(x, prob)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/numeric_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnamed Quantile Value — numeric_quantile","text":"x vector numeric prob probability passed quantile","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/round_to_decade.html","id":null,"dir":"Reference","previous_headings":"","what":"round to decade — round_to_decade","title":"round to decade — round_to_decade","text":"rounds next decade end year >=5 floors previous decade end year <5.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/round_to_decade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"round to decade — round_to_decade","text":"","code":"round_to_decade(values)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/round_to_decade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"round to decade — round_to_decade","text":"values year","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/round_to_decade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"round to decade — round_to_decade","text":"decade","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/round_to_decade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"round to decade — round_to_decade","text":"","code":"round_to_decade(2000:2020) #>  [1] 2000 2000 2000 2000 2000 2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 #> [16] 2020 2020 2020 2020 2020 2020"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_color_decades.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: scale color decades — scale_color_decades","title":"ggplot2: scale color decades — scale_color_decades","text":"ggplot2: scale color decades","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_color_decades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: scale color decades — scale_color_decades","text":"","code":"scale_color_decades(decades, ...)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_color_decades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: scale color decades — scale_color_decades","text":"decades decades ... additional arguments passed xxx","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_color_decades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: scale color decades — scale_color_decades","text":"re-scales ggplot2","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_fill_decades.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2: scale fill decades — scale_fill_decades","title":"ggplot2: scale fill decades — scale_fill_decades","text":"ggplot2: scale fill decades","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_fill_decades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2: scale fill decades — scale_fill_decades","text":"","code":"scale_fill_decades(decades, ...)"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_fill_decades.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2: scale fill decades — scale_fill_decades","text":"decades decades ... additional arguments passed xxx","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/scale_fill_decades.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2: scale fill decades — scale_fill_decades","text":"re-scales ggplot2","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/news/index.html","id":"kwbimpetus-0009000","dir":"Changelog","previous_headings":"","what":"kwb.impetus 0.0.0.9000","title":"kwb.impetus 0.0.0.9000","text":"Added two workflows data analysis (monthly values grouped decades, month mean well 5% 95% confidence intervals given). two workflows based open-data Wasserportal Berlin covered data period starts 1970-01-01 recent year. Time resolution varied mostly daily quantitative surface/groundwater monitoring stations. summarized monthly means. Deutscher Wetterdienst (DWD) spatially averaged parameters (e.g. precipitation, evaporation: real potential Berlin (see DWD workflow). longest time period data available precipitation, starts 1881-01-01 ends 2022-08-31. details checkout dataset dwd_berlin_monthly provided within R package. Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
