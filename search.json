[{"path":"https://kwb-r.github.io/kwb.impetus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"helper-functions","dir":"Articles","previous_headings":"","what":"Helper Functions","title":"Wasserportal","text":"","code":"library(kwb.impetus) csv_to_list <- function(variables) { stats::setNames(lapply(seq_len(length(variables)), function(i) {  var <- names(variables[i]) url <- sprintf(\"https://kwb-r.github.io/wasserportal/daily_%s.csv\", var)  readr::read_csv(url)  }), nm = names(variables) ) }  get_master <- function(stations) { ids <- stations$overview_df %>%    dplyr::filter(.data$Betreiber == \"Land Berlin\") %>%    dplyr::count(.data$Messstellennummer, .data$Betreiber) %>%    dplyr::pull(.data$Messstellennummer)  wasserportal::get_wasserportal_masters_data(station_ids = ids) %>%    dplyr::rename(Messstellennummer = .data$Nummer)  }  round_to_decade <- function(values) {   unlist(lapply(values, function(value) {    decade <- value - value %% 10       if (value %% 10 >= 5) {        decade <- decade + 10      }    decade   })) }  scale_fill_decades <- function(decades, ...){     ggplot2:::manual_scale(         'fill',          values = setNames(decades$values,                            decades$names),          ...     ) }  scale_color_decades <- function(decades, ...){     ggplot2:::manual_scale(         'color',          values = setNames(decades$values,                            decades$names),          ...     ) }"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"surface-water","dir":"Articles","previous_headings":"","what":"Surface Water","title":"Wasserportal","text":"","code":"stations <- wasserportal::get_stations() #> Importing 9 station overviews from Wasserportal Berlin ... ok. (9.11s) variables <- wasserportal::get_surfacewater_variables() variables <- variables[1:2] variables #> surface_water.water_level        surface_water.flow  #>                      \"ws\"                      \"df\"  # sw_data_daily_list <- wasserportal::get_daily_surfacewater_data(stations, #                                                           variables)  wp_master <- get_master(stations) %>%    dplyr::mutate(Messstellennummer = as.double(.data$Messstellennummer))  #> Importing 74 station metadata from Wasserportal Berlin ... ok. (36.69s)  wp_data <- csv_to_list(variables)  #> Rows: 470435 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (2): Parameter, Einheit #> dbl  (2): Messstellennummer, Tagesmittelwert #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> Rows: 110337 Columns: 5 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (2): Parameter, Einheit #> dbl  (2): Messstellennummer, Tagesmittelwert #> date (1): Datum #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"surface-water-level","dir":"Articles","previous_headings":"Surface Water","what":"Surface Water Level","title":"Wasserportal","text":"","code":"surfacewater_level_master <- wp_data$surface_water.water_level %>%    dplyr::filter(.data$Parameter == \"Wasserstand\") %>%     dplyr::mutate(Datum = as.Date(.data$Datum),                 Jahr = as.integer(format(.data$Datum, \"%Y\")),                  Dekade = round_to_decade(.data$Jahr),                 Dekade_Label = sprintf(\"%d - %d\",                                         .data$Dekade - 5,                                         .data$Dekade + 4),                 Monat = as.factor(format(.data$Datum, \"%m\"))) %>%    dplyr::left_join(wp_master) %>%    dplyr::mutate(Tagesmittelwert_Pegelstand_mNN = as.numeric(.data$Pegelnullpunkt_m) + .data$Tagesmittelwert/100) %>%   ### remove -777 for messstellennummer 5867000 (few values in 2000) resulted by step above   dplyr::filter(.data$Tagesmittelwert_Pegelstand_mNN != -777) %>%   dplyr::select(- .data$Pegelnullpunkt_m) %>%    dplyr::mutate(Label = sprintf(\"%s (%s, id: %s, fluss-km: %2.2f)\",                                  .data$Name,                                 .data$Gewaesser,                                  .data$Messstellennummer,                                  as.numeric(.data$Flusskilometer))) #> Joining, by = \"Messstellennummer\"  surfacewater_level_master_agg <- surfacewater_level_master %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Dekade,                   .data$Dekade_Label,                    .data$Monat,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert_Pegelstand_mNN = mean(.data$Tagesmittelwert_Pegelstand_mNN),                    q05 = as.numeric(quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.05)),                    q95 = as.numeric(quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.95)),                    )  #> `summarise()` has grouped output by 'Messstellennummer', 'Dekade', #> 'Dekade_Label', 'Monat'. You can override using the `.groups` argument.   decades <- tibble::tibble(names = unique(surfacewater_level_master_agg$Dekade_Label)[order(unique(surfacewater_level_master_agg$Dekade_Label))],                           values = c('darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red'))   kwb.utils::preparePdf(\"surface-water_level.pdf\",                       landscape = TRUE,                       width.cm = 29.7,                        height.cm = 21) #> [1] \"surface-water_level.pdf\"  ids <- unique(surfacewater_level_master_agg$Messstellennummer)  for(id in ids) { p1 <- surfacewater_level_master_agg %>%    dplyr::filter(.data$Messstellennummer == id)   p2 <- surfacewater_level_master %>%    dplyr::filter(.data$Jahr == max(.data$Jahr)) %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Jahr,                   .data$Monat,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert_Pegelstand_mNN = mean(.data$Tagesmittelwert_Pegelstand_mNN),                    q05 = quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.05),                    q95 = quantile(.data$Tagesmittelwert_Pegelstand_mNN, probs = 0.95)) %>%    dplyr::filter(.data$Messstellennummer == id)   n_decades <- length(unique(p1$Dekade_Label))  gg <- p1 %>%    ggplot2::ggplot(mapping = ggplot2::aes(x = as.integer(.data$Monat),                                           y = .data$Monatsmittelwert_Pegelstand_mNN,                                          col = as.factor(.data$Dekade_Label))) +    #ggplot2::geom_point(alpha = 0.5) +    ggplot2::geom_ribbon(ggplot2::aes_string(ymin = \"q05\",                                             ymax = \"q95\",                                             fill = \"Dekade_Label\"),                         alpha = 0.1) +    scale_fill_decades(decades) +   scale_color_decades(decades) +   ggplot2::geom_point() +   ggplot2::geom_point(ggplot2::aes(x = as.integer(.data$Monat),                                    y = .data$Monatsmittelwert_Pegelstand_mNN),                        data = p2,                       col = \"darkgrey\",                       alpha = 0.5,                        inherit.aes = FALSE,                       show.legend = FALSE) +   ggplot2::scale_x_continuous(breaks = 1:12, labels = 1:12, minor_breaks = NULL) +   #ggplot2::geom_boxplot() +   ggplot2::facet_wrap( ~ .data$Dekade_Label,                        nrow = 1,                         ncol = n_decades) +   ggplot2::theme_bw() +    ggplot2::theme(legend.position=\"bottom\") +   ggplot2::labs(y = \"Monatsmittel Pegelstand (m NN)\",                  x = \"Monatsnummer\",                  col = \"Mittelwert\",                  fill = \"5%/95% Konf.-intervall\",                 title = unique(p1$Label))  plot(gg) } #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. dev.off() #> agg_png  #>       2"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"surface-water-flow","dir":"Articles","previous_headings":"Surface Water","what":"Surface Water Flow","title":"Wasserportal","text":"","code":"surfacewater_flow_master <- wp_data$surface_water.flow %>%    dplyr::filter(.data$Parameter == \"Durchfluss\") %>%       dplyr::mutate(Datum = as.Date(.data$Datum),                 Jahr = as.integer(format(.data$Datum, \"%Y\")),                  Dekade = round_to_decade(.data$Jahr),                 Dekade_Label = sprintf(\"%d - %d\",                                         .data$Dekade - 5,                                         .data$Dekade + 4),                 Monat = as.factor(format(.data$Datum, \"%m\"))) %>%    dplyr::left_join(wp_master) %>%    dplyr::mutate(Label = sprintf(\"%s (%s, id: %s, fluss-km: %2.2f)\",                                  .data$Name,                                 .data$Gewaesser,                                  .data$Messstellennummer,                                  as.numeric(.data$Flusskilometer))) #> Joining, by = \"Messstellennummer\"  surfacewater_flow_master_agg <- surfacewater_flow_master %>%     dplyr::group_by(.data$Messstellennummer,                    .data$Dekade,                   .data$Dekade_Label,                    .data$Monat,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert = mean(.data$Tagesmittelwert),                    q05 = as.numeric(quantile(.data$Tagesmittelwert, probs = 0.05)),                    q95 = as.numeric(quantile(.data$Tagesmittelwert, probs = 0.95)),                    )  #> `summarise()` has grouped output by 'Messstellennummer', 'Dekade', #> 'Dekade_Label', 'Monat'. You can override using the `.groups` argument.     decades <- tibble::tibble(names = unique(surfacewater_flow_master_agg $Dekade_Label)[order(unique(surfacewater_flow_master_agg$Dekade_Label))],                           values = c('darkblue', 'blue', 'darkgreen', 'lightgreen', 'orange', 'red'))    kwb.utils::preparePdf(\"surface-water_flow.pdf\",                       landscape = TRUE,                       width.cm = 29.7,                        height.cm = 21) #> [1] \"surface-water_flow.pdf\"  ids <- unique(surfacewater_flow_master_agg$Messstellennummer)  for(id in ids) { p1 <- surfacewater_flow_master_agg %>%    dplyr::filter(.data$Messstellennummer == id)   p2 <- surfacewater_flow_master %>%    dplyr::filter(.data$Jahr == max(.data$Jahr)) %>%    dplyr::group_by(.data$Messstellennummer,                    .data$Jahr,                   .data$Monat,                    .data$Label) %>%    dplyr::summarise(Monatsmittelwert = mean(.data$Tagesmittelwert),                    q05 = quantile(.data$Tagesmittelwert, probs = 0.05),                    q95 = quantile(.data$Tagesmittelwert, probs = 0.95)) %>%    dplyr::filter(.data$Messstellennummer == id)   n_decades <- length(unique(p1$Dekade_Label))  gg <- p1 %>%    ggplot2::ggplot(mapping = ggplot2::aes(x = as.integer(.data$Monat),                                           y = .data$Monatsmittelwert,                                          col = as.factor(.data$Dekade_Label))) +    #ggplot2::geom_point(alpha = 0.5) +    ggplot2::geom_ribbon(ggplot2::aes_string(ymin = \"q05\",                                             ymax = \"q95\",                                             fill = \"Dekade_Label\"),                         alpha = 0.1) +    scale_fill_decades(decades) +   scale_color_decades(decades) +   ggplot2::geom_point() +   ggplot2::geom_point(ggplot2::aes(x = as.integer(.data$Monat),                                    y = .data$Monatsmittelwert),                        data = p2,                       col = \"darkgrey\",                       alpha = 0.5,                        inherit.aes = FALSE,                       show.legend = FALSE) +   ggplot2::scale_x_continuous(breaks = 1:12, labels = 1:12, minor_breaks = NULL) +   #ggplot2::geom_boxplot() +   ggplot2::facet_wrap( ~ .data$Dekade_Label,                        nrow = 1,                         ncol = n_decades) +   ggplot2::theme_bw() +    ggplot2::theme(legend.position=\"bottom\") +   ggplot2::labs(y = \"Monatsmittel Durchfluss (m\\u00B3/s)\",                  x = \"Monatsnummer\",                  col = \"Mittelwert\",                  fill = \"5%/95% Konf.-intervall\",                 title = unique(p1$Label))  plot(gg) } #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. #> `summarise()` has grouped output by 'Messstellennummer', 'Jahr', 'Monat'. You #> can override using the `.groups` argument. dev.off() #> agg_png  #>       2"},{"path":"https://kwb-r.github.io/kwb.impetus/articles/wasserportal.html","id":"download","dir":"Articles","previous_headings":"","what":"Download","title":"Wasserportal","text":"plots created code exported pdf files, available download : surface-water_level.pdf surface-water_flow.pdf","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M (2022). kwb.impetus: R Package Functions Used Project IMPETUS. R package version 0.0.0.9000, https://github.com/KWB-R/kwb.impetus.","code":"@Manual{,   title = {kwb.impetus: R Package with Functions Used in Project IMPETUS},   author = {Michael Rustler},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/KWB-R/kwb.impetus}, }"},{"path":"https://kwb-r.github.io/kwb.impetus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package with Functions Used in Project IMPETUS","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install 'kwb.impetus in R install.packages('kwb.impetus')  # Browse the 'kwb.impetus manual pages help(package = 'kwb.impetus')"},{"path":"https://kwb-r.github.io/kwb.impetus/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Package with Functions Used in Project IMPETUS","text":"Checkout Workflow article use R package.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/kwb.impetus/news/index.html","id":"kwbimpetus-0009000","dir":"Changelog","previous_headings":"","what":"kwb.impetus 0.0.0.9000","title":"kwb.impetus 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
